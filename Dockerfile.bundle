# --build-arg RUNTIME_IMAGE; functions runtime image
# --build-arg bundle; 'sample' or 'usr' to build functions in dir
ARG RUNTIME_IMAGE=mcr.microsoft.com/azure-functions/base:2.0

# steps are:
#   1) build extensions
#   2) build worker and samples
#   3) copy artifacts to runtime image

# 1. build extensions with dotnet
FROM microsoft/dotnet:2.1-sdk AS dotnet-env
COPY sample/extensions.csproj /extensions/extensions.csproj
WORKDIR /extensions
RUN dotnet build extensions.csproj -o bin

# 2. build worker with go
FROM golang:1.11 as golang-env
ARG bundle=sample
WORKDIR /go/src/github.com/Azure/azure-functions-go
ENV DEP_RELEASE_TAG=v0.5.0
COPY . .
RUN curl -sSL https://raw.githubusercontent.com/golang/dep/master/install.sh | sh \
    && dep ensure -v -vendor-only \
    && chmod +x ./test/build.sh \
    && ./test/build.sh native ${bundle} verbose \
    && chmod +x ./workers/golang/start.sh

# 3. copy built worker and extensions to runtime image
# ARG instructions used here must be declared before first FROM
FROM ${RUNTIME_IMAGE}
ARG bundle=sample

RUN rm -rf /home/site/wwwroot
COPY --from=dotnet-env \
    /extensions/bin/ /home/site/wwwroot/bin/

# copy worker to predefined path
COPY --from=golang-env \
    /go/src/github.com/Azure/azure-functions-go/workers/golang/ \
    /azure-functions-host/workers/golang/

# copy functions to predefined path
COPY --from=golang-env \
    /go/src/github.com/Azure/azure-functions-go/${bundle}/ \
    /home/site/wwwroot

# use predefined env var names to point to worker start script
ENV workers:golang:path /azure-functions-host/workers/golang/start.sh
# Uncomment the following line to get worker and function logs
# ENV AZURE_FUNCTIONS_ENVIRONMENT development
